cluster {
    configs {
        SOLR {}
        OOZIE {}
        HDFS {
            "dfs_replication"="1"
        }
        "KS_INDEXER" {}
        ZOOKEEPER {}
        HBASE {}
        YARN {}
        HIVE {}
        HUE {}
        KAFKA {}
        FLUME {}
        IMPALA {}
        "SPARK_ON_YARN" {}
    }
    redeployClientConfigsOnUpdate=false
    restartOnUpdate=false
    masters {
        count=1
        configs {}
        minCount=1
        instance {
            subnetId=${?AWS_SUBNET_ID}
            image=${?AWS_AMI_ID}
            ebsOptimized="false"
            rootVolumeSizeGB="50"
            type="t2.xlarge"
            sshHostKeyRetrievalType=NONE
            tags {
                owner=${?OWNER}
            }
            ebsVolumeCount="0"
            enableEbsEncryption="false"
            rootVolumeType=standard
            instanceNamePrefix=director
            normalizeInstance=true
            ebsVolumeSizeGiB="500"
            useSpotInstances="false"
            ebsVolumeType=st1
            bootstrapScripts=[
                "#!/bin/bash\n\n# Setup NTP server\nyum install -y ntp\nsystemctl start ntpd\nsystemctl enable ntpd\n\n# We remove any natively installed JDKs, as both Cloudera Manager and Cloudera Director only support Oracle JDKs\nyum remove --assumeyes *openjdk*\nrpm -ivh \"https://archive.cloudera.com/director/redhat/7/x86_64/director/2.8.0/RPMS/x86_64/oracle-j2sdk1.8-1.8.0+update121-1.x86_64.rpm\"\n\n# Change symbolink to JDK 8\nJAVA_HOME=/usr/java/jdk1.8.0_121-cloudera\nalternatives --install /usr/bin/java java ${JAVA_HOME:?}/bin/java 10\nalternatives --install /usr/bin/javac javac ${JAVA_HOME:?}/bin/javac 10\nln -nfs ${JAVA_HOME:?} /usr/java/latest\nln -nfs /usr/java/latest /usr/java/default\n\n# Add JAVA_HOME environment\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /etc/environment\"\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /root/.bash_profile\"\n"
            ]
            securityGroupsIds=${?AWS_SECGROUP_ID}
            rackId="/default"
        }
        roles {
            HIVE=[
                HIVEMETASTORE,
                HIVESERVER2
            ]
            SOLR=[
                "SOLR_SERVER"
            ]
            HDFS=[
                NAMENODE,
                SECONDARYNAMENODE,
                BALANCER
            ]
            OOZIE=[
                "OOZIE_SERVER"
            ]
            HUE=[
                "HUE_SERVER"
            ]
            "KS_INDEXER"=[
                "HBASE_INDEXER"
            ]
            HBASE=[
                MASTER
            ]
            ZOOKEEPER=[
                SERVER
            ]
            YARN=[
                RESOURCEMANAGER,
                JOBHISTORY
            ]
            IMPALA=[
                CATALOGSERVER,
                STATESTORE
            ]
            "SPARK_ON_YARN"=[
                "SPARK_YARN_HISTORY_SERVER"
            ]
        }
    }
    services=[
        HIVE,
        IMPALA,
        OOZIE,
        HUE,
        ZOOKEEPER,
        HDFS,
        KAFKA,
        YARN,
        HBASE,
        SOLR,
        "KS_INDEXER",
        FLUME,
        "SPARK_ON_YARN"
    ]
    products {
        CDH="5.15.1-1.cdh5.15.1.p0.4"
        KAFKA="3.0.0-1.3.0.0.p0.40"
    }
    preTerminateScripts=[]
    postCreateScripts=[]
    administrationSettings {
        autoRepairCooldownPeriodInSeconds=1800
        autoRepairEnabled=false
    }
    instancePostCreateScripts=[]
    workers {
        count=1
        configs {}
        minCount=1
        instance {
            subnetId=${?AWS_SUBNET_ID}
            image=${?AWS_AMI_ID}
            ebsOptimized="false"
            rootVolumeSizeGB="50"
            type="t2.xlarge"
            sshHostKeyRetrievalType=NONE
            tags {
                owner=${?OWNER}
            }
            ebsVolumeCount="0"
            enableEbsEncryption="false"
            rootVolumeType=standard
            instanceNamePrefix=director
            normalizeInstance=true
            ebsVolumeSizeGiB="500"
            useSpotInstances="false"
            ebsVolumeType=st1
            bootstrapScripts=[
                "#!/bin/bash\n\n# Setup NTP server\nyum install -y ntp\nsystemctl start ntpd\nsystemctl enable ntpd\n\n# We remove any natively installed JDKs, as both Cloudera Manager and Cloudera Director only support Oracle JDKs\nyum remove --assumeyes *openjdk*\nrpm -ivh \"https://archive.cloudera.com/director/redhat/7/x86_64/director/2.8.0/RPMS/x86_64/oracle-j2sdk1.8-1.8.0+update121-1.x86_64.rpm\"\n\n# Change symbolink to JDK 8\nJAVA_HOME=/usr/java/jdk1.8.0_121-cloudera\nalternatives --install /usr/bin/java java ${JAVA_HOME:?}/bin/java 10\nalternatives --install /usr/bin/javac javac ${JAVA_HOME:?}/bin/javac 10\nln -nfs ${JAVA_HOME:?} /usr/java/latest\nln -nfs /usr/java/latest /usr/java/default\n\n# Add JAVA_HOME environment\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /etc/environment\"\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /root/.bash_profile\"\n"
            ]
            securityGroupsIds=${?AWS_SECGROUP_ID}
            rackId="/default"
        }
        roles {
            HDFS=[
                DATANODE
            ]
            HBASE=[
                REGIONSERVER
            ]
            YARN=[
                NODEMANAGER
            ]
            IMPALA=[
                IMPALAD
            ]
        }
    }
    gateway {
        count=1
        configs {}
        minCount=1
        instance {
            subnetId=${?AWS_SUBNET_ID}
            image=${?AWS_AMI_ID}
            ebsOptimized="false"
            rootVolumeSizeGB="50"
            type="t2.xlarge"
            sshHostKeyRetrievalType=NONE
            tags {
                owner=${?OWNER}
            }
            ebsVolumeCount="0"
            enableEbsEncryption="false"
            rootVolumeType=standard
            instanceNamePrefix=director
            normalizeInstance=true
            ebsVolumeSizeGiB="500"
            useSpotInstances="false"
            ebsVolumeType=st1
            bootstrapScripts=[
                "#!/bin/bash\n\n# Setup NTP server\nyum install -y ntp\nsystemctl start ntpd\nsystemctl enable ntpd\n\n# We remove any natively installed JDKs, as both Cloudera Manager and Cloudera Director only support Oracle JDKs\nyum remove --assumeyes *openjdk*\nrpm -ivh \"https://archive.cloudera.com/director/redhat/7/x86_64/director/2.8.0/RPMS/x86_64/oracle-j2sdk1.8-1.8.0+update121-1.x86_64.rpm\"\n\n# Change symbolink to JDK 8\nJAVA_HOME=/usr/java/jdk1.8.0_121-cloudera\nalternatives --install /usr/bin/java java ${JAVA_HOME:?}/bin/java 10\nalternatives --install /usr/bin/javac javac ${JAVA_HOME:?}/bin/javac 10\nln -nfs ${JAVA_HOME:?} /usr/java/latest\nln -nfs /usr/java/latest /usr/java/default\n\n# Add JAVA_HOME environment\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /etc/environment\"\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /root/.bash_profile\"\n"
            ]
            securityGroupsIds=${?AWS_SECGROUP_ID}
            rackId="/default"
        }
        roles {
            HIVE=[
                GATEWAY
            ]
            SOLR=[
                GATEWAY
            ]
            HDFS=[
                GATEWAY
            ]
            FLUME=[
                AGENT
            ]
            KAFKA=[
                "KAFKA_BROKER"
            ]
            HBASE=[
                GATEWAY
            ]
            YARN=[
                GATEWAY
            ]
            "SPARK_ON_YARN"=[
                GATEWAY
            ]
        }
    }
    parcelRepositories=[
        "https://archive.cloudera.com/cdh5/parcels/5.15/",
        "https://archive.cloudera.com/kafka/parcels/3.0/"
    ]
}
provider {
    accessKeyId=REDACTED
    secretAccessKey=REDACTED
    associatePublicIpAddresses="true"
    importKeyPairIfMissing="false"
    rdsAssociatePublicIpAddresses="false"
    type=aws
    keyNamePrefix=CLOUDERA-
    region=${?AWS_REGION}
    rdsRegion=${?AWS_REGION}
}
environmentName=AWS-DEV
name=EDH
ssh {
    privateKey=${?AWS_KEY_PATH}
    username=centos
}
deploymentName=CM
cloudera-manager {
    password="cloudera"
    instance {
        subnetId=${?AWS_SUBNET_ID}
        image=${?AWS_AMI_ID}
        ebsOptimized="false"
        rootVolumeSizeGB="50"
        type="t2.xlarge"
        sshHostKeyRetrievalType=NONE
        tags {
            owner=${?AWS_OWNER}
        }
        ebsVolumeCount="0"
        enableEbsEncryption="false"
        rootVolumeType=standard
        instanceNamePrefix=director
        normalizeInstance=true
        ebsVolumeSizeGiB="500"
        useSpotInstances="false"
        ebsVolumeType=st1
        bootstrapScripts=[
            "#!/bin/bash\n\n# Setup NTP server\nyum install -y ntp\nsystemctl start ntpd\nsystemctl enable ntpd\n\n# We remove any natively installed JDKs, as both Cloudera Manager and Cloudera Director only support Oracle JDKs\nyum remove --assumeyes *openjdk*\nrpm -ivh \"https://archive.cloudera.com/director/redhat/7/x86_64/director/2.8.0/RPMS/x86_64/oracle-j2sdk1.8-1.8.0+update121-1.x86_64.rpm\"\n\n# Change symbolink to JDK 8\nJAVA_HOME=/usr/java/jdk1.8.0_121-cloudera\nalternatives --install /usr/bin/java java ${JAVA_HOME:?}/bin/java 10\nalternatives --install /usr/bin/javac javac ${JAVA_HOME:?}/bin/javac 10\nln -nfs ${JAVA_HOME:?} /usr/java/latest\nln -nfs /usr/java/latest /usr/java/default\n\n# Add JAVA_HOME environment\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /etc/environment\"\nsh -c \"echo export JAVA_HOME=/usr/java/jdk1.8.0_121-cloudera >> /root/.bash_profile\"\n"
        ]
        securityGroupsIds=${?AWS_SECGROUP_ID}
        rackId="/default"
    }
    repository="https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.15.1"
    enableEnterpriseTrial=true
    javaInstallationStrategy=AUTO
    username=cloudera
}
